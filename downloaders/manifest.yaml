apiVersion: v1
kind: Namespace
metadata:
  name: downloaders
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: downloads
  namespace: downloaders
spec:
  capacity:
    storage: 1000Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: "/volume1/downloads/"
    server: "192.168.10.51"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tvseries
  namespace: downloaders
spec:
  capacity:
    storage: 1000Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: "/volume1/tvseries/"
    server: "192.168.10.51"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: deluge-config
  namespace: downloaders
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: "/volume1/kube/config/deluge/"
    server: "192.168.10.51"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deluge-config-claim
  namespace: downloaders
spec:
  volumeName: deluge-config
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deluge-downloads
  namespace: downloaders
spec:
  volumeName: downloads
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1000Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: deluge
  labels:
    app.kubernetes.io/name: deluge
spec:
  containers:
  - name: deluge
    image: linuxserver/deluge:2.1.1
    ports:
    - containerPort: 58846
    - containerPort: 58946
    - containerPort: 8112
    env:
    - name: PGID
      value: "100"
    - name: PUID
      value: "1036"
    - name: TZ
      value: "Europe/Rome"
    volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"
  volumes:
  - name: config
    persistentVolumeClaim:
      claimName: deluge-config-claim
  - name: downloads
    persistentVolumeClaim:
      claimName: deluge-downloads
---
kind: Service
apiVersion: v1
metadata:
  name: deluge
  namespace: downloaders
spec:
  selector:
    app.kubernetes.io/name: deluge
  ports:   
    - name: deluge-8112
      protocol: TCP
      port: 8112
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prowlarr-config
  namespace: downloaders
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: "/volume1/kube/config/prowlarr/"
    server: "192.168.10.51"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config-claim
  namespace: downloaders
spec:
  volumeName: prowlarr-config
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: prowlarr
  labels:
    app.kubernetes.io/name: prowlarr
spec:
  containers:
  - name: prowlarr
    image: lscr.io/linuxserver/prowlarr:1.32.2
    ports:
    - containerPort: 9696
    env:
    - name: PGID
      value: "100"
    - name: PUID
      value: "1036"
    - name: TZ
      value: "Europe/Rome"
    volumeMounts:
    - name: config
      mountPath: "/config"
  volumes:
  - name: config
    persistentVolumeClaim:
      claimName: prowlarr-config-claim
---
kind: Service
apiVersion: v1
metadata:
  name: prowlarr
  namespace: downloaders
spec:
  selector:
    app.kubernetes.io/name: prowlarr
  ports:   
    - name: prowlarr-9696
      protocol: TCP
      port: 9696
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-config
  namespace: downloaders
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: "/volume1/kube/config/sonarr/"
    server: "192.168.10.51"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-claim
  namespace: downloaders
spec:
  volumeName: sonarr-config
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-downloads
  namespace: downloaders
spec:
  volumeName: downloads
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1000Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-tvseries
  namespace: downloaders
spec:
  volumeName: tvseries
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1000Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: sonarr
  labels:
    app.kubernetes.io/name: sonarr
spec:
  containers:
  - name: sonarr
    image: lscr.io/linuxserver/sonarr:4.0.14
    ports:
    - containerPort: 8989
    env:
    - name: PGID
      value: "100"
    - name: PUID
      value: "1036"
    - name: TZ
      value: "Europe/Rome"
    volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"
    - name: tvseries
      mountPath: "/tv"
  volumes:
  - name: config
    persistentVolumeClaim:
      claimName: sonarr-config-claim
  - name: downloads
    persistentVolumeClaim:
      claimName: sonarr-downloads
  - name: tvseries
    persistentVolumeClaim:
      claimName: sonarr-tvseries
---
kind: Service
apiVersion: v1
metadata:
  name: sonarr
  namespace: downloaders
spec:
  selector:
    app.kubernetes.io/name: sonarr
  ports:   
    - name: sonarr-8989
      protocol: TCP
      port: 8989
